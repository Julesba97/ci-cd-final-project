apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: cleanup
spec:
  workspaces:
    - name: source
  steps:
    - name: remove
      image: alpine:3
      env:
        name: WORKSPACE_SOURCE_PATH
        value: "$(workspaces.source.path)"
      WorkingDir: "$(workspaces.source.path)"
      securityContext:
        runAsNonRoot: false
        runAsUser: 0
      script: |
          #!/usr/bin/env sh
          set -eu
          echo "Suppression de tous les fichiers de ${WORKSPACE_SOURCE_PATH} ..."
          # Supprimer tout contenu existant du répertoire s'il existe.
          #
          # Nous ne faisons pas simplement "rm -rf ${WORKSPACE_SOURCE_PATH}" car ${WORKSPACE_SOURCE_PATH} pourrait être "/"
          # ou la racine d'un volume monté.
          if [ -d "${WORKSPACE_SOURCE_PATH}" ] ; then
            # Supprimer les fichiers et répertoires non cachés
            rm -rf "${WORKSPACE_SOURCE_PATH:?}"/*
            # Supprimer les fichiers et répertoires commençant par . mais en excluant ..
            rm -rf "${WORKSPACE_SOURCE_PATH}"/.[!.]*
            # Supprimer les fichiers et répertoires commençant par .. plus tout autre caractère
            rm -rf "${WORKSPACE_SOURCE_PATH}"/..?*
          fi
---

apiVersion: tekton.dev/v1beta1
kind: Task
metadata: 
  name: nose
spec: 
  workspaces:
    - name: source
  params:
    - name: args
      description: "Arguments to pass to nose"
      type: string
      default: "-v"
  steps:
    - name: nosetests
      image: python:3.9-slim
      WorkingDir: "$(workspaces.source.path)"
      script: |
          #!/bin/bash
          set -e
          python -m pip install --upgrade pip wheel
          pip install -r requirements.txt
          nosetests $(params.args)

